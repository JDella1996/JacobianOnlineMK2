{"version":3,"sources":["components/staticfiles/documents/JacobADellaResume.pdf","components/staticfiles/documents/JacobADellaTranscript.pdf","components/Home.js","components/Navigation.js","components/Links.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","RandomQuote","quotes","Math","floor","random","length","triggered","map","quote","className","quote_author","quote_contents","id","class","this","getQuotes","sourceType","screenName","options","height","width","Component","Navigation","href","to","style","color","textDecoration","activeStyle","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","Links","target","Resume","Transcript","App","document","title","render","location","TransitionGroup","CSSTransition","timeout","classNames","key","path","component","exact","Error","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+1CAAAA,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,mD,iOCqE5BC,E,kDAhEX,WAAYC,GACX,uCACSA,G,wDAIN,IAAIC,EAAcC,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,SACvDC,GAAY,EAChB,OAAOL,EAAOM,KAAI,SAACC,GACnB,IAAKF,EAED,OADAA,GAAY,EAER,6BACA,wBAAIG,UAAU,aACV,uDACDT,EAAYU,aAFf,OAEiCV,EAAYW,eAF7C,W,+BAeZ,OAEI,yBAAKF,UAAU,QAAO,iCACtB,6BACA,6BACA,6BACA,6BACA,6BACA,6BACP,yBAAKG,GAAK,WACH,oCAAa,wBAAIC,MAAQ,YAAZ,MAEb,wBAAIA,MAAQ,aACZ,4BAAKC,KAAKC,aACV,wBAAIF,MAAQ,aACZ,4VAIE,wBAAIA,MAAQ,aACZ,sCACA,2BACA,kBAAC,IAAD,CACAD,GAAK,iBACLI,WAAW,UACXC,WAAW,iBACXC,QAAS,CAACC,OAAQ,IAAKC,MAAM,QAG7B,qD,GA3DSC,aCsCJC,EAtCI,WACf,OACF,6BACA,yBAAKT,MAAM,0CACX,uBAAGA,MAAM,eAAeU,KAAK,KAAI,kBAAC,IAAD,CAASC,GAAG,kBAAiBC,MAAO,CAACC,MAAO,QAASC,eAAgB,QAASC,YAAa,CAACF,MAAO,UAAWC,eAAgB,SAA9H,kBACjC,4BAAQd,MAAM,iBAAiBgB,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBACxK,0BAAMrB,MAAM,wBACZ,0BAAMA,MAAM,wBACZ,0BAAMA,MAAM,wBACZ,0BAAMA,MAAM,yBAEZ,yBAAKA,MAAM,UACT,uBAAGA,MAAM,qBAAoB,kBAAC,IAAD,CAASW,GAAG,uBAAuBC,MAAO,CAACC,MAAO,QAASC,eAAgB,QAASC,YAAa,CAACF,MAAO,WAAYC,eAAgB,SAArI,SAA7B,IAA4L,0BAAMd,MAAM,WAAZ,gBAUtL,4BAAQsB,IAAI,qCACZ,4BAAQA,IAAI,kD,kCCgCTC,EAtDD,WACV,OACI,yBAAK3B,UAAU,QACtB,iCACO,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,yBAAKG,GAAK,WACV,qCAAc,wBAAIC,MAAQ,YAAZ,MAEd,wBAAIA,MAAQ,aACZ,4BACI,4BACK,uBAAGU,KAAK,mCAAmCc,OAAO,UAAlD,SAAkE,0BAAMxB,MAAM,WAAZ,cAClE,8BAGL,4BACI,uBAAGU,KAAK,gCAAgCc,OAAO,UAA/C,SAA+D,0BAAMxB,MAAM,WAAZ,cAC/D,8BAEJ,4BACK,uBAAGU,KAAK,2DAA2Dc,OAAO,UAA1E,UAA0F,0BAAMxB,MAAM,WAAZ,cAC1F,8BAEL,4BACI,uBAAIU,KAAK,iCAAiCc,OAAO,UAAjD,UAAkE,0BAAMxB,MAAM,WAAZ,cAClE,8BAGJ,4BACI,uBAAIU,KAAK,qDAAqDc,OAAO,UAArE,WAAuF,0BAAMxB,MAAM,WAAZ,cACvF,8BAEJ,4BACK,uBAAGU,KAAMe,IAAQD,OAAO,UAAxB,SAAuC,0BAAMxB,MAAM,WAAZ,cACvC,8BAGL,4BACK,uBAAGU,KAAMgB,IAAYF,OAAO,UAA5B,aAA+C,0BAAMxB,MAAM,WAAZ,cAC/C,+BAGT,wBAAIA,MAAQ,aACZ,kD,gBCJO2B,G,wDArCb,WAAYzC,GACZ,OAAC,oBACG0C,SAASC,MAAQ,gBADrB,YAGU3C,G,qDAMR,OACI,6BACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO4C,OAAU,gBAAEC,EAAF,EAAEA,SAAF,OACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,QAAS,IACTC,WAAa,OACbC,IAAKL,EAASK,KAEZ,kBAAC,IAAD,CAAQL,SAAYA,GAChB,kBAAC,IAAD,CAAOM,KAAK,iBAAiBC,UAAWrD,EAAMsD,OAAK,IACnD,kBAAC,IAAD,CAAOF,KAAK,uBAAuBC,UAAWf,EAAOgB,OAAK,IAC1D,kBAAC,IAAD,CAAOD,UAAWE,oB,GA3BpBhC,cCIEiC,QACW,cAA7BC,OAAOX,SAASY,UAEe,UAA7BD,OAAOX,SAASY,UAEhBD,OAAOX,SAASY,SAASC,MACvB,2D,MCVNC,IAASf,OAAO,kBAAC,EAAD,MAASF,SAASkB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7944122c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JacobADellaResume.4f273883.pdf\";","module.exports = __webpack_public_path__ + \"static/media/JacobADellaTranscript.3ad37baa.pdf\";","import React,{Component} from 'react';\r\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\r\nimport quotes from './staticfiles/json/quotes.json';\r\nclass Home extends Component{\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n      getQuotes() {\r\n        let RandomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n        let triggered = false\r\n        return quotes.map((quote) => {\r\n        if (!triggered){\r\n            triggered = true\r\n            return (\r\n                <div>\r\n                <h4 className='frontpage'>\r\n                    <h3>Random quote of the day</h3>\r\n                  {RandomQuote.quote_author} - \"{RandomQuote.quote_contents}\" \r\n                \r\n                        \r\n                 </h4>\r\n                  </div>\r\n              ); \r\n        }\r\n\r\n        });\r\n      }\r\n\r\n\r\n    render(){\r\n    return (\r\n \r\n        <div className=\"page\"><section>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\t<div id = \"heading\">\r\n        <h1>Home</h1><h1 class = \"blinking\">_</h1>   \r\n        </div> \r\n        <hr class = \"colorbar\"></hr>\r\n        <h1>{this.getQuotes()}</h1>\r\n        <hr class = \"colorbar\"></hr>\r\n        <p>Welcome to my website, my name is Jacob Della. I have a bachelor's of computer science and a Mathematics minor from Towson University. \r\n          I have experience working in IT and developing software.\r\n          I have included my resume and additional documents which can be found under links. Thank you for your time and consideration. \r\n        </p>\r\n          <hr class = \"colorbar\"></hr>\r\n          <h1>Tweets</h1>\r\n          <a>\r\n          <TwitterTimelineEmbed\r\n          id = \"twitter-widget\"\r\n          sourceType=\"profile\"\r\n          screenName=\"dellathefella_\"\r\n          options={{height: 800, width:700}}\r\n          />\r\n          </a>\r\n          <p>By dellathefella</p>\r\n        </section>\r\n       </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;\r\n","import React  from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n  <div>\r\n  <nav class=\"navbar navbar-expand-lg navbar-custom \">\r\n  <a class=\"navbar-brand\" href=\"#\"><NavLink to=\"/dellathefella/\"style={{color: 'white', textDecoration: 'none'}} activeStyle={{color: '#0252e6', textDecoration: 'none'}}>dellathefella</NavLink></a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n    <div class=\"navbar\">\r\n      <a class=\"nav-item nav-link\"><NavLink to=\"/dellathefella/links\" style={{color: 'white', textDecoration: 'none'}} activeStyle={{color: ' #0252e6', textDecoration: 'none'}} >Links</NavLink> <span class=\"sr-only\">(current)</span></a>\r\n    </div>\r\n</nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n              {/*<-- Boot Strap JS Core -->*/}\r\n            <script src=\"vendor/jquery/jquery.slim.min.js\"></script>\r\n            <script src=\"vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n\r\n      </div>\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Navigation;\r\n","\r\nimport React from 'react';\r\nimport Resume from \"./staticfiles/documents/JacobADellaResume.pdf\"\r\nimport Transcript from \"./staticfiles/documents/JacobADellaTranscript.pdf\"\r\nconst Links = () => {\r\n    return (\r\n        <div className=\"page\">\r\n\t<section>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <div id = \"heading\">\r\n        <h1>Links</h1><h1 class = \"blinking\">_</h1>   \r\n        </div> \r\n        <hr class = \"colorbar\"></hr>\r\n        <ul>\r\n            <li>\r\n                 <a href=\"https://github.com/dellathefella\" target=\"_blank\" >GitHub<span class=\"sr-only\">(current)</span></a>\r\n                 <br></br>\r\n            </li>\r\n\r\n            <li>\r\n                <a href=\"https://gitlab.com/jdella1996\" target=\"_blank\" >GitLab<span class=\"sr-only\">(current)</span></a>\r\n                <br></br>\r\n            </li>\r\n            <li>\r\n                 <a href=\"https://www.youtube.com/channel/UCYAF7gMbq5J36Zl6F-NEvWA\" target=\"_blank\">Youtube<span class=\"sr-only\">(current)</span></a>\r\n                 <br></br>\r\n            </li>\r\n            <li>\r\n                <a  href=\"https://twitter.com/JDella1996\" target=\"_blank\" >Twitter<span class=\"sr-only\">(current)</span></a>\r\n                <br></br>\r\n            </li>\r\n\r\n            <li>\r\n                <a  href=\"https://www.linkedin.com/in/jacob-della-83921a141/\" target=\"_blank\" >Linkedin<span class=\"sr-only\">(current)</span></a>\r\n                <br></br>\r\n            </li>\r\n            <li>\r\n                 <a href={Resume} target=\"_blank\">Resume<span class=\"sr-only\">(current)</span></a>\r\n                 <br></br>\r\n\r\n            </li>\r\n            <li>\r\n                 <a href={Transcript} target=\"_blank\">Transcript<span class=\"sr-only\">(current)</span></a>\r\n                 <br></br>\r\n            </li>\r\n        </ul>\r\n        <hr class = \"colorbar\"></hr>\r\n        <p>By dellathefella</p>\r\n       </section>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default Links;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Navigation from './components/Navigation';\r\nimport Links from './components/Links';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './App.css'\r\n\r\nclass App extends Component {    \r\n  \r\n  \r\n  constructor(props)\r\n  {\r\n      document.title = \"dellathefella\";\r\n      \r\n      super(props); \r\n  }\r\n  \r\n  render() {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <BrowserRouter>     \r\n          <Navigation />\r\n          <Route render = {({location}) => (\r\n            <TransitionGroup>\r\n              <CSSTransition \r\n              timeout={500} \r\n              classNames = \"fade\"\r\n              key={location.key}\r\n              >\r\n                <Switch location = {location}>\r\n                    <Route path=\"/dellathefella\" component={Home} exact/>\r\n                    <Route path=\"/dellathefella/links\" component={Links} exact/>\r\n                    <Route component={Error}/>\r\n                  </Switch>\r\n             </CSSTransition>\r\n           </TransitionGroup>\r\n          )}/>\r\n\r\n      </BrowserRouter>    \r\n\r\n        </div> \r\n     );\r\n  }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}